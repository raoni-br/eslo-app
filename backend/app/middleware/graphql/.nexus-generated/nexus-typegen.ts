/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */

import type * as PrismaClient from ".prisma/client"
import type { EsloContext } from "./../context"




declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
  ActivateAndUpgradeSubscriptionInput: { // input type
    subscriptionId: string; // String!
    subscriptionItems?: Array<NexusGenInputs['SubscriptionItemsInput'] | null> | null; // [SubscriptionItemsInput]
  }
  AddStudentToGroupInput: { // input type
    id: string; // String!
    studyGroupId: string; // String!
  }
  Answer: { // input type
    key?: string | null; // String
    value?: string | null; // String
    values?: Array<string | null> | null; // [String]
  }
  ChangeEventInput: { // input type
    availabilityType: string; // String!
    changeStatus: string; // String!
    completedAt?: string | null; // String
    description: string; // String!
    endDateTime: string; // String!
    endTimeZone: string; // String!
    id?: string | null; // ID
    organiserId?: string | null; // String
    ownerId?: string | null; // String
    recurrence: string; // String!
    sendNotifications?: boolean | null; // Boolean
    sourceType: string; // String!
    startDateTime: string; // String!
    startTimeZone: string; // String!
    title: string; // String!
    visibility?: string | null; // String
  }
  ChangePasswordInput: { // input type
    newPassword?: string | null; // String
    oldPassword?: string | null; // String
    userEmail?: string | null; // String
  }
  ChangeScheduleInput: { // input type
    enrollmentId: string; // ID!
    events?: Array<NexusGenInputs['ChangeEventInput'] | null> | null; // [ChangeEventInput]
  }
  ClassroomFiltersInput: { // input type
    activeEnrollmentsOnly?: boolean | null; // Boolean
    studyGroupStatus?: string | null; // String
  }
  CreateProductInput: { // input type
    completedAt?: string | null; // String
    description: string; // String!
    name: string; // String!
    slug: string; // String!
    startedAt?: string | null; // String
    subcategoryCode: string; // String!
  }
  CreateProductPriceInput: { // input type
    allowFreeTrial?: boolean | null; // Boolean
    completedAt?: string | null; // String
    currencyIsoCode: string; // String!
    description: string; // String!
    name: string; // String!
    pricePeriod?: NexusGenInputs['PricePeriodInput'] | null; // PricePeriodInput
    productId: string; // String!
    recurrence?: string | null; // String
    slug: string; // String!
    startedAt?: string | null; // String
    taxAmount: number; // Float!
    type: string; // String!
    unitTotalAmount: number; // Float!
  }
  CreateStudyGroupInput: { // input type
    events?: Array<NexusGenInputs['EventInput'] | null> | null; // [EventInput]
    levelId: string; // ID!
    name: string; // String!
  }
  CreateSubscriptionInput: { // input type
    subscriptionItems: Array<NexusGenInputs['SubscriptionItemsInput'] | null>; // [SubscriptionItemsInput]!
    type: string; // String!
  }
  DashboardFilters: { // input type
    enrollmentStatus?: string | null; // String
    subscriptionsExpiringInDays?: number | null; // Int
    subscriptionsStatus?: string | null; // String
  }
  EditFinishedClassInput: { // input type
    attendees?: Array<NexusGenInputs['StudyGroupAttendeeInput'] | null> | null; // [StudyGroupAttendeeInput]
    classRecordId: string; // String!
    lessonEndedAt?: string | null; // String
    lessonStartedAt?: string | null; // String
    sourceId: string; // String!
    sourceType: string; // String!
    teacherNotes?: string | null; // String
  }
  EnrollmentInput: { // input type
    oneOnOne?: NexusGenInputs['OneOnOneInput'] | null; // OneOnOneInput
    studyGroupId?: string | null; // String
  }
  EventInput: { // input type
    availabilityType: string; // String!
    completedAt?: string | null; // String
    description?: string | null; // String
    endDateTime: string; // String!
    endTimeZone: string; // String!
    iCalUID?: string | null; // String
    recurrence?: string | null; // String
    sendNotifications?: boolean | null; // Boolean
    sourceId?: string | null; // String
    sourceType: string; // String!
    startDateTime: string; // String!
    startTimeZone: string; // String!
    startedAt?: string | null; // String
    status?: string | null; // String
    title: string; // String!
    visibility?: string | null; // String
  }
  EventOccurrenceInput: { // input type
    availabilityType: string; // String!
    description: string; // String!
    endDateTime: string; // String!
    endTimeZone: string; // String!
    id: string; // String!
    originalStartDateTime: string; // String!
    originalStartTimeZone: string; // String!
    recurringEventId: string; // String!
    sendNotifications?: boolean | null; // Boolean
    sourceId: string; // ID!
    sourceType: string; // String!
    startDateTime: string; // String!
    startTimeZone: string; // String!
    status: string; // String!
    title: string; // String!
    visibility?: string | null; // String
  }
  EventsInput: { // input type
    events?: Array<NexusGenInputs['EventInput'] | null> | null; // [EventInput]
  }
  FinishClassInput: { // input type
    attendees?: Array<NexusGenInputs['StudyGroupAttendeeInput'] | null> | null; // [StudyGroupAttendeeInput]
    classRecordId: string; // String!
    lessonEndedAt?: string | null; // String
    lessonStartedAt?: string | null; // String
    sourceId: string; // String!
    sourceType: string; // String!
    status?: string | null; // String
    teacherNotes?: string | null; // String
  }
  FinishStudyGroupClassInput: { // input type
    attendees?: Array<NexusGenInputs['StudyGroupAttendeeInput'] | null> | null; // [StudyGroupAttendeeInput]
    status: string; // String!
    studyGroupClassRecordId: string; // ID!
    teacherNotes?: string | null; // String
  }
  OneOnOneInput: { // input type
    events?: Array<NexusGenInputs['EventInput'] | null> | null; // [EventInput]
    levelId: string; // String!
  }
  PriceFilters: { // input type
    active?: boolean | null; // Boolean
  }
  PricePeriodInput: { // input type
    interval: string; // String!
    intervalCount: number; // Int!
  }
  ProductFilters: { // input type
    categoryCode?: string | null; // String
    priceFilters?: NexusGenInputs['PriceFilters'] | null; // PriceFilters
  }
  RemoveStudyGroupInput: { // input type
    studyGroupId: string; // ID!
  }
  RevertFinishedClassStatusInput: { // input type
    classRecordId: string; // String!
    sourceId: string; // String!
    sourceType: string; // String!
  }
  RevertLessonStatusInput: { // input type
    lessonId: string; // String!
    sourceId: string; // ID!
    sourceType: string; // String!
  }
  StartClassInput: { // input type
    lessonId?: string | null; // String
    levelId?: string | null; // String
    sourceId: string; // String!
    sourceType: string; // String!
    teacherNotes?: string | null; // String
  }
  StartStudyGroupClassInput: { // input type
    lessonId: string; // String!
    studyGroupId: string; // ID!
    teacherNotes?: string | null; // String
  }
  StudentInput: { // input type
    email: string; // String!
    firstName: string; // String!
    surname: string; // String!
  }
  StudyGroupAttendeeInput: { // input type
    attended?: boolean | null; // Boolean
    studentId: string; // String!
  }
  SubmitUserTutorialFormInput: { // input type
    answers?: Array<NexusGenInputs['Answer'] | null> | null; // [Answer]
    slug?: string | null; // String
  }
  SubscriptionItemsInput: { // input type
    priceId: string; // String!
    quantity: number; // Int!
  }
  UpdateProductPriceInput: { // input type
    allowFreeTrial?: boolean | null; // Boolean
    currencyIsoCode?: string | null; // String
    description?: string | null; // String
    name?: string | null; // String
    priceId: string; // String!
    pricePeriod?: NexusGenInputs['PricePeriodInput'] | null; // PricePeriodInput
    recurrence?: string | null; // String
    slug: string; // String!
    taxAmount: number; // Float!
    type?: string | null; // String
    unitTotalAmount: number; // Float!
  }
  UpdateStudyGroupInput: { // input type
    events?: Array<NexusGenInputs['ChangeEventInput'] | null> | null; // [ChangeEventInput]
    name: string; // String!
    studyGroupId: string; // ID!
  }
  UserAddressInput: { // input type
    addressType?: string | null; // String
    city?: string | null; // String
    countryISO?: string | null; // String
    district?: string | null; // String
    id?: string | null; // ID
    latitude?: number | null; // Float
    longitude?: number | null; // Float
    postalCode?: string | null; // String
    state?: string | null; // String
    street?: string | null; // String
    streetComplement?: string | null; // String
    streetNumber?: string | null; // String
  }
  UserIdentificationInput: { // input type
    attachementUrl?: string | null; // String
    category?: string | null; // String
    code?: string | null; // String
    countryISO?: string | null; // String
    id?: string | null; // ID
  }
  UserInput: { // input type
    displayName?: string | null; // String
    familyName?: string | null; // String
    firstName?: string | null; // String
    primaryEmail?: string | null; // String
    profileComplete?: boolean | null; // Boolean
    userAddresses?: Array<NexusGenInputs['UserAddressInput'] | null> | null; // [UserAddressInput]
    userIdentificationList?: Array<NexusGenInputs['UserIdentificationInput'] | null> | null; // [UserIdentificationInput]
  }
  UserPhoneNumberInput: { // input type
    category?: string | null; // String
    code?: string | null; // String
    countryISO?: string | null; // String
    id?: string | null; // ID
    internationalFormat?: string | null; // String
    nationalFormat?: string | null; // String
    rawFormat?: string | null; // String
  }
}

export interface NexusGenEnums {
}

export interface NexusGenScalars {
  String: string
  Int: number
  Float: number
  Boolean: boolean
  ID: string
}

export interface NexusGenObjects {
  Activity: { // root type
    activitySlides?: Array<NexusGenRootTypes['MediaAssociation'] | null> | null; // [MediaAssociation]
    order: number; // Int!
    title: string; // String!
  }
  AppData: { // root type
    enrollments?: Array<NexusGenRootTypes['Enrollment'] | null> | null; // [Enrollment]
    events?: Array<NexusGenRootTypes['Event'] | null> | null; // [Event]
    id?: string | null; // ID
    studyGroups?: Array<NexusGenRootTypes['StudyGroup'] | null> | null; // [StudyGroup]
    users?: Array<NexusGenRootTypes['User'] | null> | null; // [User]
  }
  BalanceDetails: { // root type
    discountAmount?: number | null; // Float
    quantity?: number | null; // Float
    taxAmount?: number | null; // Float
    totalAmount?: number | null; // Float
    unitPrice?: number | null; // Float
  }
  BalanceSummary: { // root type
    discountAmount?: number | null; // Float
    taxAmount?: number | null; // Float
    totalAmount?: number | null; // Float
  }
  Button: { // root type
    action?: string | null; // String
    text?: string | null; // String
    type: string; // String!
  }
  Checkbox: { // root type
    key?: string | null; // String
    objects?: Array<NexusGenRootTypes['CheckboxObjects'] | null> | null; // [CheckboxObjects]
    required?: boolean | null; // Boolean
    text?: string | null; // String
    type: string; // String!
  }
  Classroom: { // root type
    id: string; // ID!
  }
  CompanyDetails: { // root type
    address?: string | null; // String
    email?: string | null; // String
    id: string; // ID!
    name?: string | null; // String
    phone?: string | null; // String
    webSite?: string | null; // String
  }
  ConferenceData: { // root type
    conferenceKey?: string | null; // String
    conferenceUrl?: string | null; // String
    sourceId?: string | null; // String
    sourceType?: string | null; // String
  }
  CustomerDetails: { // root type
    address?: string | null; // String
    email?: string | null; // String
    id: string; // ID!
    name?: string | null; // String
    phone?: string | null; // String
  }
  CustomerPaymentSettings: PrismaClient.CustomerPaymentSettings;
  Delay: { // root type
    index?: number | null; // Int
    time?: number | null; // Int
    type: string; // String!
  }
  Dialog: { // root type
    animation?: string | null; // String
    key?: string | null; // String
    order?: string | null; // String
    steps?: Array<NexusGenRootTypes['DialogSteps'] | null> | null; // [DialogSteps]
    title?: string | null; // String
    type: string; // String!
  }
  DialogBox: { // root type
    key?: string | null; // String
    objects?: Array<NexusGenRootTypes['DialogObjects'] | null> | null; // [DialogObjects]
    required?: boolean | null; // Boolean
    text?: string | null; // String
    type: string; // String!
  }
  Enrollment: PrismaClient.Enrollment;
  EnrollmentClassRecord: { // root type
    completedAt?: string | null; // String
    deletedAt?: string | null; // String
    enrollmentId: string; // String!
    id: string; // ID!
    lessonEndedAt?: string | null; // String
    lessonStartedAt?: string | null; // String
    startedAt?: string | null; // String
    status?: string | null; // String
    teacherNotes?: string | null; // String
  }
  Event: PrismaClient.Event;
  EventAttendee: PrismaClient.EventAttendee;
  EventOccurrence: PrismaClient.EventOccurrence;
  EventOccurrenceAttendee: PrismaClient.EventOccurrenceAttendee;
  FinishedLesson: {};
  FreeTrial: { // root type
    expiringInDays?: string | null; // String
    trialEndedAt?: string | null; // String
    trialStartedAt?: string | null; // String
  }
  Input: { // root type
    placeholder?: string | null; // String
    type: string; // String!
    valueType?: string | null; // String
  }
  Invitation: PrismaClient.Invitation;
  InvoiceItem: PrismaClient.InvoiceItem;
  InvoicePreview: { // root type
    balanceSummary?: NexusGenRootTypes['BalanceSummary'] | null; // BalanceSummary
    companyDetails?: NexusGenRootTypes['CompanyDetails'] | null; // CompanyDetails
    customerDetails?: NexusGenRootTypes['CustomerDetails'] | null; // CustomerDetails
    dueDate?: string | null; // String
    id: string; // ID!
    invoiceItems?: Array<NexusGenRootTypes['InvoiceItem'] | null> | null; // [InvoiceItem]
    invoicePeriodFrom?: string | null; // String
    invoicePeriodTo?: string | null; // String
    processedAt?: string | null; // String
  }
  Lesson: PrismaClient.Lesson;
  LessonMaterial: { // root type
    activities?: Array<NexusGenRootTypes['Activity'] | null> | null; // [Activity]
    audio?: Array<NexusGenRootTypes['MediaAssociation'] | null> | null; // [MediaAssociation]
    lectureScript?: Array<NexusGenRootTypes['MediaAssociation'] | null> | null; // [MediaAssociation]
    studentBook?: Array<NexusGenRootTypes['MediaAssociation'] | null> | null; // [MediaAssociation]
  }
  Level: PrismaClient.Level;
  LevelLayoutSettings: { // root type
    icon?: string | null; // String
    primaryColour?: string | null; // String
    secondaryColour?: string | null; // String
    svgImageUrl?: string | null; // String
  }
  Media: { // root type
    altTxt?: string | null; // String
    id: string; // ID!
    largeFilename?: string | null; // String
    mediumFilename?: string | null; // String
    mimeType?: string | null; // String
    rootUri?: string | null; // String
    smallFilename?: string | null; // String
    thumbnailFilename?: string | null; // String
  }
  MediaAssociation: { // root type
    media: NexusGenRootTypes['Media']; // Media!
    order: number; // Int!
  }
  Module: PrismaClient.Module;
  Mutation: {};
  Option: { // root type
    hint?: string | null; // String
    text?: string | null; // String
    type: string; // String!
    value?: string | null; // String
  }
  PricePeriod: { // root type
    interval: string; // String!
    intervalCount: number; // Int!
  }
  Product: PrismaClient.Product;
  ProductCategory: PrismaClient.ProductCategory;
  ProductPrice: { // root type
    currencyIsoCode?: string | null; // String
    description?: string | null; // String
    id: string; // ID!
    name?: string | null; // String
    slug?: string | null; // String
    taxAmount?: number | null; // Float
    type?: string | null; // String
    unitTotalAmount?: number | null; // Float
  }
  ProductSubcategory: PrismaClient.ProductSubcategory;
  Program: PrismaClient.Program;
  ProviderInfo: { // root type
    providerCode?: string | null; // String
    providerId?: string | null; // String
  }
  ProviderLessonDetails: { // root type
    rexCourse?: string | null; // String
    rexKeyLanguage?: string | null; // String
    rexLanguage?: string | null; // String
    rexPronunciationLesson?: string | null; // String
  }
  Query: {};
  Question: { // root type
    animation?: string | null; // String
    key?: string | null; // String
    order?: string | null; // String
    steps?: Array<NexusGenRootTypes['QuestionSteps'] | null> | null; // [QuestionSteps]
    title?: string | null; // String
    type: string; // String!
  }
  Radio: { // root type
    key?: string | null; // String
    objects?: Array<NexusGenRootTypes['RadioObjects'] | null> | null; // [RadioObjects]
    required?: boolean | null; // Boolean
    text?: string | null; // String
    type: string; // String!
  }
  Student: { // root type
    displayName?: string | null; // String
    familyName?: string | null; // String
    firstName?: string | null; // String
    id: string; // ID!
    primaryEmail?: string | null; // String
  }
  StudentDashboard: { // root type
    id: string; // ID!
  }
  StudentSubscriptions: { // root type
    customerId?: string | null; // String
    id?: string | null; // ID
    renewalDate?: string | null; // String
    status?: string | null; // String
  }
  StudyGroup: PrismaClient.StudyGroup;
  StudyGroupClassAttendee: PrismaClient.StudyGroupClassAttendee;
  StudyGroupClassRecord: PrismaClient.StudyGroupClassRecord;
  StudyGroupTeacher: PrismaClient.StudyGroupTeacher;
  Subscription: { // root type
    customerId?: string | null; // String
    id: string; // ID!
    paymentProviderCheckoutId?: string | null; // String
    paymentProviderId?: string | null; // String
    status?: string | null; // String
  }
  SubscriptionItem: PrismaClient.SubscriptionItem;
  TeacherDashboard: { // root type
    id: string; // ID!
  }
  User: PrismaClient.User;
  UserAddress: PrismaClient.UserAddress;
  UserIdentification: PrismaClient.UserIdentification;
  UserPhoneNumber: PrismaClient.UserPhoneNumber;
  UserTutorialForm: { // root type
    description?: string | null; // String
    id: string; // ID!
    sections?: Array<NexusGenRootTypes['Section'] | null> | null; // [Section]
    slug?: string | null; // String
    title?: string | null; // String
  }
}

export interface NexusGenInterfaces {
  ClassRecordInterface: NexusGenRootTypes['EnrollmentClassRecord'] | NexusGenRootTypes['StudyGroupClassRecord'];
}

export interface NexusGenUnions {
  ActivateAndUpdateSubscriptionType: NexusGenRootTypes['CustomerPaymentSettings'] | NexusGenRootTypes['Subscription'];
  CheckboxObjects: NexusGenRootTypes['Button'] | NexusGenRootTypes['Option'];
  ClassRecord: PrismaClient.ClassRecord;
  DialogObjects: NexusGenRootTypes['Button'] | NexusGenRootTypes['Delay'] | NexusGenRootTypes['Input'];
  DialogSteps: NexusGenRootTypes['DialogBox'];
  QuestionSteps: NexusGenRootTypes['Checkbox'] | NexusGenRootTypes['DialogBox'] | NexusGenRootTypes['Radio'];
  RadioObjects: NexusGenRootTypes['Button'] | NexusGenRootTypes['Option'];
  Section: NexusGenRootTypes['Dialog'] | NexusGenRootTypes['Question'];
}

export type NexusGenRootTypes = NexusGenInterfaces & NexusGenObjects & NexusGenUnions

export type NexusGenAllTypes = NexusGenRootTypes & NexusGenScalars

export interface NexusGenFieldTypes {
  Activity: { // field return type
    activitySlides: Array<NexusGenRootTypes['MediaAssociation'] | null> | null; // [MediaAssociation]
    order: number; // Int!
    title: string; // String!
  }
  AppData: { // field return type
    enrollments: Array<NexusGenRootTypes['Enrollment'] | null> | null; // [Enrollment]
    events: Array<NexusGenRootTypes['Event'] | null> | null; // [Event]
    id: string | null; // ID
    studyGroups: Array<NexusGenRootTypes['StudyGroup'] | null> | null; // [StudyGroup]
    users: Array<NexusGenRootTypes['User'] | null> | null; // [User]
  }
  BalanceDetails: { // field return type
    discountAmount: number | null; // Float
    quantity: number | null; // Float
    taxAmount: number | null; // Float
    totalAmount: number | null; // Float
    unitPrice: number | null; // Float
  }
  BalanceSummary: { // field return type
    discountAmount: number | null; // Float
    taxAmount: number | null; // Float
    totalAmount: number | null; // Float
  }
  Button: { // field return type
    action: string | null; // String
    text: string | null; // String
    type: string; // String!
  }
  Checkbox: { // field return type
    key: string | null; // String
    objects: Array<NexusGenRootTypes['CheckboxObjects'] | null> | null; // [CheckboxObjects]
    required: boolean | null; // Boolean
    text: string | null; // String
    type: string; // String!
  }
  Classroom: { // field return type
    classInProgress: NexusGenRootTypes['ClassRecord'] | null; // ClassRecord
    id: string; // ID!
    studentEnrollments: Array<NexusGenRootTypes['Enrollment'] | null> | null; // [Enrollment]
    students: Array<NexusGenRootTypes['Student'] | null> | null; // [Student]
    studyGroups: Array<NexusGenRootTypes['StudyGroup'] | null> | null; // [StudyGroup]
  }
  CompanyDetails: { // field return type
    address: string | null; // String
    email: string | null; // String
    id: string; // ID!
    name: string | null; // String
    phone: string | null; // String
    webSite: string | null; // String
  }
  ConferenceData: { // field return type
    conferenceKey: string | null; // String
    conferenceUrl: string | null; // String
    sourceId: string | null; // String
    sourceType: string | null; // String
  }
  CustomerDetails: { // field return type
    address: string | null; // String
    email: string | null; // String
    id: string; // ID!
    name: string | null; // String
    phone: string | null; // String
  }
  CustomerPaymentSettings: { // field return type
    id: string; // ID!
    paymentProviderCheckoutSessionId: string | null; // String
    paymentProviderPaymentMethodId: string | null; // String
    userId: string | null; // String
  }
  Delay: { // field return type
    index: number | null; // Int
    time: number | null; // Int
    type: string; // String!
  }
  Dialog: { // field return type
    animation: string | null; // String
    key: string | null; // String
    order: string | null; // String
    steps: Array<NexusGenRootTypes['DialogSteps'] | null> | null; // [DialogSteps]
    title: string | null; // String
    type: string; // String!
  }
  DialogBox: { // field return type
    key: string | null; // String
    objects: Array<NexusGenRootTypes['DialogObjects'] | null> | null; // [DialogObjects]
    required: boolean | null; // Boolean
    text: string | null; // String
    type: string; // String!
  }
  Enrollment: { // field return type
    activationDate: string | null; // String
    classInProgress: NexusGenRootTypes['ClassRecord'] | null; // ClassRecord
    classRecords: Array<NexusGenRootTypes['ClassRecord'] | null> | null; // [ClassRecord]
    events: Array<NexusGenRootTypes['Event'] | null> | null; // [Event]
    externalKey: string | null; // String
    id: string; // ID!
    invitation: NexusGenRootTypes['Invitation'] | null; // Invitation
    lastLesson: NexusGenRootTypes['ClassRecord'] | null; // ClassRecord
    lessons: Array<NexusGenRootTypes['Lesson'] | null> | null; // [Lesson]
    level: NexusGenRootTypes['Level'] | null; // Level
    nextEventOccurrence: NexusGenRootTypes['EventOccurrence'] | null; // EventOccurrence
    nextLesson: NexusGenRootTypes['Lesson'] | null; // Lesson
    registrationDate: string | null; // String
    sourceType: string | null; // String
    status: string | null; // String
    student: NexusGenRootTypes['User'] | null; // User
    studyGroup: NexusGenRootTypes['StudyGroup'] | null; // StudyGroup
    teacher: NexusGenRootTypes['User'] | null; // User
  }
  EnrollmentClassRecord: { // field return type
    completedAt: string | null; // String
    deletedAt: string | null; // String
    enrollment: NexusGenRootTypes['Enrollment'] | null; // Enrollment
    enrollmentId: string; // String!
    id: string; // ID!
    lesson: NexusGenRootTypes['Lesson']; // Lesson!
    lessonEndedAt: string | null; // String
    lessonStartedAt: string | null; // String
    revertClassStatus: boolean | null; // Boolean
    startedAt: string | null; // String
    status: string | null; // String
    teacherNotes: string | null; // String
  }
  Event: { // field return type
    availabilityType: string | null; // String
    completedAt: string | null; // String
    conferenceData: NexusGenRootTypes['ConferenceData'] | null; // ConferenceData
    description: string | null; // String
    endDateTime: string | null; // String
    endTimeZone: string | null; // String
    enrollment: NexusGenRootTypes['Enrollment'] | null; // Enrollment
    eventAttendees: Array<NexusGenRootTypes['EventAttendee'] | null> | null; // [EventAttendee]
    eventOccurrences: Array<NexusGenRootTypes['EventOccurrence'] | null> | null; // [EventOccurrence]
    iCalUID: string | null; // String
    id: string; // ID!
    organiser: NexusGenRootTypes['User'] | null; // User
    owner: NexusGenRootTypes['User'] | null; // User
    recurrence: string | null; // String
    sendNotifications: boolean | null; // Boolean
    sourceId: string | null; // String
    sourceType: string | null; // String
    startDateTime: string | null; // String
    startTimeZone: string | null; // String
    startedAt: string | null; // String
    status: string | null; // String
    title: string | null; // String
    visibility: string | null; // String
  }
  EventAttendee: { // field return type
    attendee: NexusGenRootTypes['User'] | null; // User
    comment: string | null; // String
    id: string; // ID!
    optional: boolean | null; // Boolean
    organiser: boolean | null; // Boolean
    responseDateTime: string | null; // String
    responseStatus: string | null; // String
  }
  EventOccurrence: { // field return type
    availabilityType: string | null; // String
    conferenceData: NexusGenRootTypes['ConferenceData'] | null; // ConferenceData
    description: string | null; // String
    endDateTime: string | null; // String
    endTimeZone: string | null; // String
    enrollment: NexusGenRootTypes['Enrollment'] | null; // Enrollment
    eventOccurrenceAttendees: Array<NexusGenRootTypes['EventOccurrenceAttendee'] | null> | null; // [EventOccurrenceAttendee]
    iCalUID: string | null; // String
    id: string; // ID!
    organiser: NexusGenRootTypes['User'] | null; // User
    originalStartDateTime: string | null; // String
    originalStartTimeZone: string | null; // String
    owner: NexusGenRootTypes['User'] | null; // User
    recurringEventId: string | null; // ID
    sendNotifications: boolean | null; // Boolean
    sourceId: string | null; // String
    sourceType: string | null; // String
    startDateTime: string | null; // String
    startTimeZone: string | null; // String
    status: string | null; // String
    studyGroup: NexusGenRootTypes['StudyGroup'] | null; // StudyGroup
    title: string | null; // String
    visibility: string | null; // String
  }
  EventOccurrenceAttendee: { // field return type
    attendee: NexusGenRootTypes['User'] | null; // User
    comment: string | null; // String
    eventOccurrenceId: string | null; // String
    id: string; // ID!
    optional: boolean | null; // Boolean
    organiser: boolean | null; // Boolean
    responseDateTime: string | null; // String
    responseStatus: string | null; // String
  }
  FinishedLesson: { // field return type
    finishedLesson: NexusGenRootTypes['ClassRecord'] | null; // ClassRecord
  }
  FreeTrial: { // field return type
    expiringInDays: string | null; // String
    trialEndedAt: string | null; // String
    trialStartedAt: string | null; // String
  }
  Input: { // field return type
    placeholder: string | null; // String
    type: string; // String!
    valueType: string | null; // String
  }
  Invitation: { // field return type
    id: string; // ID!
    invitee: NexusGenRootTypes['User'] | null; // User
    inviteeEmail: string | null; // String
    inviteeFirstName: string | null; // String
    inviteeSurname: string | null; // String
    inviter: NexusGenRootTypes['User'] | null; // User
    sourceId: string | null; // String
    sourceType: string | null; // String
    status: string | null; // String
  }
  InvoiceItem: { // field return type
    balance: NexusGenRootTypes['BalanceDetails'] | null; // BalanceDetails
    id: string; // ID!
    invoiceLineNumber: number | null; // Int
    productDescription: string | null; // String
    productId: string | null; // String
    productName: string | null; // String
  }
  InvoicePreview: { // field return type
    balanceSummary: NexusGenRootTypes['BalanceSummary'] | null; // BalanceSummary
    companyDetails: NexusGenRootTypes['CompanyDetails'] | null; // CompanyDetails
    customerDetails: NexusGenRootTypes['CustomerDetails'] | null; // CustomerDetails
    dueDate: string | null; // String
    id: string; // ID!
    invoiceItems: Array<NexusGenRootTypes['InvoiceItem'] | null> | null; // [InvoiceItem]
    invoicePeriodFrom: string | null; // String
    invoicePeriodTo: string | null; // String
    processedAt: string | null; // String
  }
  Lesson: { // field return type
    category: string | null; // String
    code: string | null; // String
    id: string; // ID!
    lessonMaterial: NexusGenRootTypes['LessonMaterial'] | null; // LessonMaterial
    level: NexusGenRootTypes['Level'] | null; // Level
    levelOrder: number | null; // Int
    providerInfo: NexusGenRootTypes['ProviderInfo'] | null; // ProviderInfo
    slug: string | null; // String
    subject: string | null; // String
    title: string | null; // String
  }
  LessonMaterial: { // field return type
    activities: Array<NexusGenRootTypes['Activity'] | null> | null; // [Activity]
    audio: Array<NexusGenRootTypes['MediaAssociation'] | null> | null; // [MediaAssociation]
    lectureScript: Array<NexusGenRootTypes['MediaAssociation'] | null> | null; // [MediaAssociation]
    studentBook: Array<NexusGenRootTypes['MediaAssociation'] | null> | null; // [MediaAssociation]
  }
  Level: { // field return type
    code: string | null; // String
    description: string | null; // String
    id: string; // ID!
    label: string | null; // String
    layoutSettings: NexusGenRootTypes['LevelLayoutSettings'] | null; // LevelLayoutSettings
    lessons: Array<NexusGenRootTypes['Lesson'] | null> | null; // [Lesson]
    module: NexusGenRootTypes['Module'] | null; // Module
    moduleOrder: number | null; // Int
    name: string | null; // String
    providerInfo: NexusGenRootTypes['ProviderInfo'] | null; // ProviderInfo
    releasedAt: string | null; // String
    removedAt: string | null; // String
  }
  LevelLayoutSettings: { // field return type
    icon: string | null; // String
    primaryColour: string | null; // String
    secondaryColour: string | null; // String
    svgImageUrl: string | null; // String
  }
  Media: { // field return type
    altTxt: string | null; // String
    id: string; // ID!
    largeFilename: string | null; // String
    mediumFilename: string | null; // String
    mimeType: string | null; // String
    rootUri: string | null; // String
    smallFilename: string | null; // String
    thumbnailFilename: string | null; // String
  }
  MediaAssociation: { // field return type
    media: NexusGenRootTypes['Media']; // Media!
    order: number; // Int!
  }
  Module: { // field return type
    code: string | null; // String
    description: string | null; // String
    id: string; // ID!
    levels: Array<NexusGenRootTypes['Level'] | null> | null; // [Level]
    name: string | null; // String
    program: NexusGenRootTypes['Program'] | null; // Program
    programOrder: number | null; // Int
    providerInfo: NexusGenRootTypes['ProviderInfo'] | null; // ProviderInfo
    releasedAt: string | null; // String
    removedAt: string | null; // String
  }
  Mutation: { // field return type
    activateAndUpgradeSubscription: NexusGenRootTypes['ActivateAndUpdateSubscriptionType'] | null; // ActivateAndUpdateSubscriptionType
    activateEnrollment: NexusGenRootTypes['Enrollment'] | null; // Enrollment
    addStudentToGroup: NexusGenRootTypes['Enrollment'] | null; // Enrollment
    cancelEnrollment: NexusGenRootTypes['Enrollment'] | null; // Enrollment
    changeEnrollmentSchedule: NexusGenRootTypes['Enrollment'] | null; // Enrollment
    changeMyPassword: NexusGenRootTypes['User'] | null; // User
    changeSpecificEvent: NexusGenRootTypes['EventOccurrence'] | null; // EventOccurrence
    createEnrollment: NexusGenRootTypes['Enrollment'] | null; // Enrollment
    createPaymentMethodCheckoutMutation: NexusGenRootTypes['CustomerPaymentSettings'] | null; // CustomerPaymentSettings
    createProduct: NexusGenRootTypes['Product'] | null; // Product
    createProductPrice: NexusGenRootTypes['ProductPrice'] | null; // ProductPrice
    createStudyGroup: NexusGenRootTypes['StudyGroup'] | null; // StudyGroup
    createSubscription: NexusGenRootTypes['Subscription'] | null; // Subscription
    editFinishedClass: NexusGenRootTypes['ClassRecord'] | null; // ClassRecord
    finishClass: NexusGenRootTypes['ClassRecord'] | null; // ClassRecord
    removeStudentFromGroup: NexusGenRootTypes['Enrollment'] | null; // Enrollment
    removeStudyGroup: NexusGenRootTypes['StudyGroup'] | null; // StudyGroup
    revertFinishedClassStatus: NexusGenRootTypes['ClassRecord'] | null; // ClassRecord
    revertLessonStatus: NexusGenRootTypes['Lesson'] | null; // Lesson
    startClass: NexusGenRootTypes['ClassRecord'] | null; // ClassRecord
    submitUserTutorialForm: NexusGenRootTypes['UserTutorialForm'] | null; // UserTutorialForm
    updateMyProfile: NexusGenRootTypes['User'] | null; // User
    updateProductPrice: NexusGenRootTypes['ProductPrice'] | null; // ProductPrice
    updateStudyGroup: NexusGenRootTypes['StudyGroup'] | null; // StudyGroup
  }
  Option: { // field return type
    hint: string | null; // String
    text: string | null; // String
    type: string; // String!
    value: string | null; // String
  }
  PricePeriod: { // field return type
    interval: string; // String!
    intervalCount: number; // Int!
  }
  Product: { // field return type
    description: string | null; // String
    id: string; // ID!
    name: string | null; // String
    prices: Array<NexusGenRootTypes['ProductPrice'] | null> | null; // [ProductPrice]
    slug: string | null; // String
    subcategory: NexusGenRootTypes['ProductSubcategory'] | null; // ProductSubcategory
  }
  ProductCategory: { // field return type
    code: string; // ID!
    description: string | null; // String
    name: string | null; // String
    products: Array<NexusGenRootTypes['Product'] | null> | null; // [Product]
  }
  ProductPrice: { // field return type
    currencyIsoCode: string | null; // String
    description: string | null; // String
    id: string; // ID!
    name: string | null; // String
    pricePeriod: NexusGenRootTypes['PricePeriod'] | null; // PricePeriod
    slug: string | null; // String
    taxAmount: number | null; // Float
    type: string | null; // String
    unitTotalAmount: number | null; // Float
  }
  ProductSubcategory: { // field return type
    category: NexusGenRootTypes['ProductCategory'] | null; // ProductCategory
    code: string; // ID!
    description: string | null; // String
    name: string | null; // String
  }
  Program: { // field return type
    code: string | null; // String
    description: string | null; // String
    icon: string | null; // String
    id: string; // ID!
    label: string | null; // String
    modules: Array<NexusGenRootTypes['Module'] | null> | null; // [Module]
    name: string | null; // String
    providerInfo: NexusGenRootTypes['ProviderInfo'] | null; // ProviderInfo
    releasedAt: string | null; // String
    removedAt: string | null; // String
  }
  ProviderInfo: { // field return type
    details: NexusGenRootTypes['ProviderLessonDetails'] | null; // ProviderLessonDetails
    providerCode: string | null; // String
    providerId: string | null; // String
  }
  ProviderLessonDetails: { // field return type
    rexCourse: string | null; // String
    rexKeyLanguage: string | null; // String
    rexLanguage: string | null; // String
    rexPronunciationLesson: string | null; // String
  }
  Query: { // field return type
    adminDataExtractor: NexusGenRootTypes['AppData'] | null; // AppData
    classroom: NexusGenRootTypes['Classroom'] | null; // Classroom
    enrollment: NexusGenRootTypes['Enrollment'] | null; // Enrollment
    findGroupById: NexusGenRootTypes['StudyGroup'] | null; // StudyGroup
    findGroupByTeacher: Array<NexusGenRootTypes['StudyGroup'] | null> | null; // [StudyGroup]
    getUserTutorialForm: NexusGenRootTypes['UserTutorialForm'] | null; // UserTutorialForm
    invoicePreview: NexusGenRootTypes['InvoicePreview'] | null; // InvoicePreview
    lesson: NexusGenRootTypes['Lesson'] | null; // Lesson
    liveChatToken: string | null; // ID
    myCalendar: Array<NexusGenRootTypes['EventOccurrence'] | null> | null; // [EventOccurrence]
    myProfile: NexusGenRootTypes['User'] | null; // User
    product: NexusGenRootTypes['Product'] | null; // Product
    products: Array<NexusGenRootTypes['Product'] | null> | null; // [Product]
    program: NexusGenRootTypes['Program'] | null; // Program
    programs: Array<NexusGenRootTypes['Program'] | null> | null; // [Program]
    studentDashboard: NexusGenRootTypes['StudentDashboard'] | null; // StudentDashboard
    subscription: NexusGenRootTypes['Subscription'] | null; // Subscription
    teacherDashboard: NexusGenRootTypes['TeacherDashboard'] | null; // TeacherDashboard
    userSubscriptions: Array<NexusGenRootTypes['Subscription'] | null> | null; // [Subscription]
  }
  Question: { // field return type
    animation: string | null; // String
    key: string | null; // String
    order: string | null; // String
    steps: Array<NexusGenRootTypes['QuestionSteps'] | null> | null; // [QuestionSteps]
    title: string | null; // String
    type: string; // String!
  }
  Radio: { // field return type
    key: string | null; // String
    objects: Array<NexusGenRootTypes['RadioObjects'] | null> | null; // [RadioObjects]
    required: boolean | null; // Boolean
    text: string | null; // String
    type: string; // String!
  }
  Student: { // field return type
    displayName: string | null; // String
    enrollments: Array<NexusGenRootTypes['Enrollment'] | null> | null; // [Enrollment]
    familyName: string | null; // String
    firstName: string | null; // String
    id: string; // ID!
    primaryEmail: string | null; // String
    subscriptions: Array<NexusGenRootTypes['StudentSubscriptions'] | null> | null; // [StudentSubscriptions]
  }
  StudentDashboard: { // field return type
    id: string; // ID!
    nextEvent: NexusGenRootTypes['EventOccurrence'] | null; // EventOccurrence
    subscriptions: Array<NexusGenRootTypes['Subscription'] | null> | null; // [Subscription]
  }
  StudentSubscriptions: { // field return type
    customerId: string | null; // String
    id: string | null; // ID
    renewalDate: string | null; // String
    status: string | null; // String
    student: NexusGenRootTypes['Student'] | null; // Student
  }
  StudyGroup: { // field return type
    enrollments: Array<NexusGenRootTypes['Enrollment'] | null> | null; // [Enrollment]
    events: Array<NexusGenRootTypes['Event'] | null> | null; // [Event]
    id: string; // ID!
    lastLesson: NexusGenRootTypes['StudyGroupClassRecord'] | null; // StudyGroupClassRecord
    lessons: Array<NexusGenRootTypes['Lesson'] | null> | null; // [Lesson]
    level: NexusGenRootTypes['Level'] | null; // Level
    name: string | null; // String
    nextLesson: NexusGenRootTypes['Lesson'] | null; // Lesson
    studyGroupClassRecords: Array<NexusGenRootTypes['StudyGroupClassRecord'] | null> | null; // [StudyGroupClassRecord]
    studyGroupTeachers: Array<NexusGenRootTypes['StudyGroupTeacher'] | null> | null; // [StudyGroupTeacher]
  }
  StudyGroupClassAttendee: { // field return type
    attended: boolean | null; // Boolean
    classRecord: NexusGenRootTypes['ClassRecord'] | null; // ClassRecord
    id: string; // ID!
    student: NexusGenRootTypes['Enrollment'] | null; // Enrollment
    studentId: string | null; // ID
    studyGroupClassRecord: NexusGenRootTypes['StudyGroupClassRecord'] | null; // StudyGroupClassRecord
  }
  StudyGroupClassRecord: { // field return type
    completedAt: string | null; // String
    deletedAt: string | null; // String
    id: string; // ID!
    lesson: NexusGenRootTypes['Lesson']; // Lesson!
    lessonEndedAt: string | null; // String
    lessonStartedAt: string | null; // String
    revertClassStatus: boolean | null; // Boolean
    startedAt: string | null; // String
    status: string | null; // String
    studyGroup: NexusGenRootTypes['StudyGroup'] | null; // StudyGroup
    studyGroupClassAttendees: Array<NexusGenRootTypes['StudyGroupClassAttendee'] | null> | null; // [StudyGroupClassAttendee]
    studyGroupId: string; // String!
    teacherNotes: string | null; // String
  }
  StudyGroupTeacher: { // field return type
    id: string; // ID!
    studyGroup: NexusGenRootTypes['StudyGroup'] | null; // StudyGroup
    studyGroupClassRecord: Array<NexusGenRootTypes['StudyGroupClassRecord'] | null> | null; // [StudyGroupClassRecord]
    teacher: NexusGenRootTypes['User'] | null; // User
  }
  Subscription: { // field return type
    customer: NexusGenRootTypes['User'] | null; // User
    customerId: string | null; // String
    freeTrial: NexusGenRootTypes['FreeTrial'] | null; // FreeTrial
    id: string; // ID!
    paymentProviderCheckoutId: string | null; // String
    paymentProviderId: string | null; // String
    status: string | null; // String
    subscriptionItems: Array<NexusGenRootTypes['SubscriptionItem'] | null> | null; // [SubscriptionItem]
  }
  SubscriptionItem: { // field return type
    active: boolean | null; // Boolean
    id: string; // ID!
    priceId: string | null; // String
    quantity: number | null; // Float
    subscriptionId: string | null; // String
  }
  TeacherDashboard: { // field return type
    id: string; // ID!
    nextEvents: Array<NexusGenRootTypes['EventOccurrence'] | null> | null; // [EventOccurrence]
    students: Array<NexusGenRootTypes['Student'] | null> | null; // [Student]
  }
  User: { // field return type
    dateOfBirth: string | null; // String
    displayName: string | null; // String
    eventsOrganised: Array<NexusGenRootTypes['Event'] | null> | null; // [Event]
    eventsOwned: Array<NexusGenRootTypes['Event'] | null> | null; // [Event]
    familyName: string | null; // String
    firstName: string | null; // String
    id: string; // ID!
    invitationsReceived: Array<NexusGenRootTypes['Invitation'] | null> | null; // [Invitation]
    onboardingSubmitted: boolean | null; // Boolean
    primaryEmail: string | null; // String
    profileComplete: boolean | null; // Boolean
    userAddresses: Array<NexusGenRootTypes['UserAddress'] | null> | null; // [UserAddress]
    userIdentificationList: Array<NexusGenRootTypes['UserIdentification'] | null> | null; // [UserIdentification]
    userPhoneNumbers: Array<NexusGenRootTypes['UserPhoneNumber'] | null> | null; // [UserPhoneNumber]
  }
  UserAddress: { // field return type
    addressType: string | null; // String
    city: string | null; // String
    countryISO: string | null; // String
    district: string | null; // String
    id: string; // ID!
    latitude: number | null; // Float
    longitude: number | null; // Float
    postalCode: string | null; // String
    state: string | null; // String
    street: string | null; // String
    streetComplement: string | null; // String
    streetNumber: string | null; // String
  }
  UserIdentification: { // field return type
    attachementUrl: string | null; // String
    category: string | null; // String
    code: string | null; // String
    countryISO: string | null; // String
    id: string; // ID!
  }
  UserPhoneNumber: { // field return type
    category: string | null; // String
    code: string | null; // String
    countryISO: string | null; // String
    id: string; // ID!
    internationalFormat: string | null; // String
    nationalFormat: string | null; // String
    rawFormat: string | null; // String
  }
  UserTutorialForm: { // field return type
    description: string | null; // String
    id: string; // ID!
    sections: Array<NexusGenRootTypes['Section'] | null> | null; // [Section]
    slug: string | null; // String
    title: string | null; // String
  }
  ClassRecordInterface: { // field return type
    completedAt: string | null; // String
    deletedAt: string | null; // String
    id: string; // ID!
    lesson: NexusGenRootTypes['Lesson']; // Lesson!
    lessonEndedAt: string | null; // String
    lessonStartedAt: string | null; // String
    startedAt: string | null; // String
    status: string | null; // String
    teacherNotes: string | null; // String
  }
}

export interface NexusGenFieldTypeNames {
  Activity: { // field return type name
    activitySlides: 'MediaAssociation'
    order: 'Int'
    title: 'String'
  }
  AppData: { // field return type name
    enrollments: 'Enrollment'
    events: 'Event'
    id: 'ID'
    studyGroups: 'StudyGroup'
    users: 'User'
  }
  BalanceDetails: { // field return type name
    discountAmount: 'Float'
    quantity: 'Float'
    taxAmount: 'Float'
    totalAmount: 'Float'
    unitPrice: 'Float'
  }
  BalanceSummary: { // field return type name
    discountAmount: 'Float'
    taxAmount: 'Float'
    totalAmount: 'Float'
  }
  Button: { // field return type name
    action: 'String'
    text: 'String'
    type: 'String'
  }
  Checkbox: { // field return type name
    key: 'String'
    objects: 'CheckboxObjects'
    required: 'Boolean'
    text: 'String'
    type: 'String'
  }
  Classroom: { // field return type name
    classInProgress: 'ClassRecord'
    id: 'ID'
    studentEnrollments: 'Enrollment'
    students: 'Student'
    studyGroups: 'StudyGroup'
  }
  CompanyDetails: { // field return type name
    address: 'String'
    email: 'String'
    id: 'ID'
    name: 'String'
    phone: 'String'
    webSite: 'String'
  }
  ConferenceData: { // field return type name
    conferenceKey: 'String'
    conferenceUrl: 'String'
    sourceId: 'String'
    sourceType: 'String'
  }
  CustomerDetails: { // field return type name
    address: 'String'
    email: 'String'
    id: 'ID'
    name: 'String'
    phone: 'String'
  }
  CustomerPaymentSettings: { // field return type name
    id: 'ID'
    paymentProviderCheckoutSessionId: 'String'
    paymentProviderPaymentMethodId: 'String'
    userId: 'String'
  }
  Delay: { // field return type name
    index: 'Int'
    time: 'Int'
    type: 'String'
  }
  Dialog: { // field return type name
    animation: 'String'
    key: 'String'
    order: 'String'
    steps: 'DialogSteps'
    title: 'String'
    type: 'String'
  }
  DialogBox: { // field return type name
    key: 'String'
    objects: 'DialogObjects'
    required: 'Boolean'
    text: 'String'
    type: 'String'
  }
  Enrollment: { // field return type name
    activationDate: 'String'
    classInProgress: 'ClassRecord'
    classRecords: 'ClassRecord'
    events: 'Event'
    externalKey: 'String'
    id: 'ID'
    invitation: 'Invitation'
    lastLesson: 'ClassRecord'
    lessons: 'Lesson'
    level: 'Level'
    nextEventOccurrence: 'EventOccurrence'
    nextLesson: 'Lesson'
    registrationDate: 'String'
    sourceType: 'String'
    status: 'String'
    student: 'User'
    studyGroup: 'StudyGroup'
    teacher: 'User'
  }
  EnrollmentClassRecord: { // field return type name
    completedAt: 'String'
    deletedAt: 'String'
    enrollment: 'Enrollment'
    enrollmentId: 'String'
    id: 'ID'
    lesson: 'Lesson'
    lessonEndedAt: 'String'
    lessonStartedAt: 'String'
    revertClassStatus: 'Boolean'
    startedAt: 'String'
    status: 'String'
    teacherNotes: 'String'
  }
  Event: { // field return type name
    availabilityType: 'String'
    completedAt: 'String'
    conferenceData: 'ConferenceData'
    description: 'String'
    endDateTime: 'String'
    endTimeZone: 'String'
    enrollment: 'Enrollment'
    eventAttendees: 'EventAttendee'
    eventOccurrences: 'EventOccurrence'
    iCalUID: 'String'
    id: 'ID'
    organiser: 'User'
    owner: 'User'
    recurrence: 'String'
    sendNotifications: 'Boolean'
    sourceId: 'String'
    sourceType: 'String'
    startDateTime: 'String'
    startTimeZone: 'String'
    startedAt: 'String'
    status: 'String'
    title: 'String'
    visibility: 'String'
  }
  EventAttendee: { // field return type name
    attendee: 'User'
    comment: 'String'
    id: 'ID'
    optional: 'Boolean'
    organiser: 'Boolean'
    responseDateTime: 'String'
    responseStatus: 'String'
  }
  EventOccurrence: { // field return type name
    availabilityType: 'String'
    conferenceData: 'ConferenceData'
    description: 'String'
    endDateTime: 'String'
    endTimeZone: 'String'
    enrollment: 'Enrollment'
    eventOccurrenceAttendees: 'EventOccurrenceAttendee'
    iCalUID: 'String'
    id: 'ID'
    organiser: 'User'
    originalStartDateTime: 'String'
    originalStartTimeZone: 'String'
    owner: 'User'
    recurringEventId: 'ID'
    sendNotifications: 'Boolean'
    sourceId: 'String'
    sourceType: 'String'
    startDateTime: 'String'
    startTimeZone: 'String'
    status: 'String'
    studyGroup: 'StudyGroup'
    title: 'String'
    visibility: 'String'
  }
  EventOccurrenceAttendee: { // field return type name
    attendee: 'User'
    comment: 'String'
    eventOccurrenceId: 'String'
    id: 'ID'
    optional: 'Boolean'
    organiser: 'Boolean'
    responseDateTime: 'String'
    responseStatus: 'String'
  }
  FinishedLesson: { // field return type name
    finishedLesson: 'ClassRecord'
  }
  FreeTrial: { // field return type name
    expiringInDays: 'String'
    trialEndedAt: 'String'
    trialStartedAt: 'String'
  }
  Input: { // field return type name
    placeholder: 'String'
    type: 'String'
    valueType: 'String'
  }
  Invitation: { // field return type name
    id: 'ID'
    invitee: 'User'
    inviteeEmail: 'String'
    inviteeFirstName: 'String'
    inviteeSurname: 'String'
    inviter: 'User'
    sourceId: 'String'
    sourceType: 'String'
    status: 'String'
  }
  InvoiceItem: { // field return type name
    balance: 'BalanceDetails'
    id: 'ID'
    invoiceLineNumber: 'Int'
    productDescription: 'String'
    productId: 'String'
    productName: 'String'
  }
  InvoicePreview: { // field return type name
    balanceSummary: 'BalanceSummary'
    companyDetails: 'CompanyDetails'
    customerDetails: 'CustomerDetails'
    dueDate: 'String'
    id: 'ID'
    invoiceItems: 'InvoiceItem'
    invoicePeriodFrom: 'String'
    invoicePeriodTo: 'String'
    processedAt: 'String'
  }
  Lesson: { // field return type name
    category: 'String'
    code: 'String'
    id: 'ID'
    lessonMaterial: 'LessonMaterial'
    level: 'Level'
    levelOrder: 'Int'
    providerInfo: 'ProviderInfo'
    slug: 'String'
    subject: 'String'
    title: 'String'
  }
  LessonMaterial: { // field return type name
    activities: 'Activity'
    audio: 'MediaAssociation'
    lectureScript: 'MediaAssociation'
    studentBook: 'MediaAssociation'
  }
  Level: { // field return type name
    code: 'String'
    description: 'String'
    id: 'ID'
    label: 'String'
    layoutSettings: 'LevelLayoutSettings'
    lessons: 'Lesson'
    module: 'Module'
    moduleOrder: 'Int'
    name: 'String'
    providerInfo: 'ProviderInfo'
    releasedAt: 'String'
    removedAt: 'String'
  }
  LevelLayoutSettings: { // field return type name
    icon: 'String'
    primaryColour: 'String'
    secondaryColour: 'String'
    svgImageUrl: 'String'
  }
  Media: { // field return type name
    altTxt: 'String'
    id: 'ID'
    largeFilename: 'String'
    mediumFilename: 'String'
    mimeType: 'String'
    rootUri: 'String'
    smallFilename: 'String'
    thumbnailFilename: 'String'
  }
  MediaAssociation: { // field return type name
    media: 'Media'
    order: 'Int'
  }
  Module: { // field return type name
    code: 'String'
    description: 'String'
    id: 'ID'
    levels: 'Level'
    name: 'String'
    program: 'Program'
    programOrder: 'Int'
    providerInfo: 'ProviderInfo'
    releasedAt: 'String'
    removedAt: 'String'
  }
  Mutation: { // field return type name
    activateAndUpgradeSubscription: 'ActivateAndUpdateSubscriptionType'
    activateEnrollment: 'Enrollment'
    addStudentToGroup: 'Enrollment'
    cancelEnrollment: 'Enrollment'
    changeEnrollmentSchedule: 'Enrollment'
    changeMyPassword: 'User'
    changeSpecificEvent: 'EventOccurrence'
    createEnrollment: 'Enrollment'
    createPaymentMethodCheckoutMutation: 'CustomerPaymentSettings'
    createProduct: 'Product'
    createProductPrice: 'ProductPrice'
    createStudyGroup: 'StudyGroup'
    createSubscription: 'Subscription'
    editFinishedClass: 'ClassRecord'
    finishClass: 'ClassRecord'
    removeStudentFromGroup: 'Enrollment'
    removeStudyGroup: 'StudyGroup'
    revertFinishedClassStatus: 'ClassRecord'
    revertLessonStatus: 'Lesson'
    startClass: 'ClassRecord'
    submitUserTutorialForm: 'UserTutorialForm'
    updateMyProfile: 'User'
    updateProductPrice: 'ProductPrice'
    updateStudyGroup: 'StudyGroup'
  }
  Option: { // field return type name
    hint: 'String'
    text: 'String'
    type: 'String'
    value: 'String'
  }
  PricePeriod: { // field return type name
    interval: 'String'
    intervalCount: 'Int'
  }
  Product: { // field return type name
    description: 'String'
    id: 'ID'
    name: 'String'
    prices: 'ProductPrice'
    slug: 'String'
    subcategory: 'ProductSubcategory'
  }
  ProductCategory: { // field return type name
    code: 'ID'
    description: 'String'
    name: 'String'
    products: 'Product'
  }
  ProductPrice: { // field return type name
    currencyIsoCode: 'String'
    description: 'String'
    id: 'ID'
    name: 'String'
    pricePeriod: 'PricePeriod'
    slug: 'String'
    taxAmount: 'Float'
    type: 'String'
    unitTotalAmount: 'Float'
  }
  ProductSubcategory: { // field return type name
    category: 'ProductCategory'
    code: 'ID'
    description: 'String'
    name: 'String'
  }
  Program: { // field return type name
    code: 'String'
    description: 'String'
    icon: 'String'
    id: 'ID'
    label: 'String'
    modules: 'Module'
    name: 'String'
    providerInfo: 'ProviderInfo'
    releasedAt: 'String'
    removedAt: 'String'
  }
  ProviderInfo: { // field return type name
    details: 'ProviderLessonDetails'
    providerCode: 'String'
    providerId: 'String'
  }
  ProviderLessonDetails: { // field return type name
    rexCourse: 'String'
    rexKeyLanguage: 'String'
    rexLanguage: 'String'
    rexPronunciationLesson: 'String'
  }
  Query: { // field return type name
    adminDataExtractor: 'AppData'
    classroom: 'Classroom'
    enrollment: 'Enrollment'
    findGroupById: 'StudyGroup'
    findGroupByTeacher: 'StudyGroup'
    getUserTutorialForm: 'UserTutorialForm'
    invoicePreview: 'InvoicePreview'
    lesson: 'Lesson'
    liveChatToken: 'ID'
    myCalendar: 'EventOccurrence'
    myProfile: 'User'
    product: 'Product'
    products: 'Product'
    program: 'Program'
    programs: 'Program'
    studentDashboard: 'StudentDashboard'
    subscription: 'Subscription'
    teacherDashboard: 'TeacherDashboard'
    userSubscriptions: 'Subscription'
  }
  Question: { // field return type name
    animation: 'String'
    key: 'String'
    order: 'String'
    steps: 'QuestionSteps'
    title: 'String'
    type: 'String'
  }
  Radio: { // field return type name
    key: 'String'
    objects: 'RadioObjects'
    required: 'Boolean'
    text: 'String'
    type: 'String'
  }
  Student: { // field return type name
    displayName: 'String'
    enrollments: 'Enrollment'
    familyName: 'String'
    firstName: 'String'
    id: 'ID'
    primaryEmail: 'String'
    subscriptions: 'StudentSubscriptions'
  }
  StudentDashboard: { // field return type name
    id: 'ID'
    nextEvent: 'EventOccurrence'
    subscriptions: 'Subscription'
  }
  StudentSubscriptions: { // field return type name
    customerId: 'String'
    id: 'ID'
    renewalDate: 'String'
    status: 'String'
    student: 'Student'
  }
  StudyGroup: { // field return type name
    enrollments: 'Enrollment'
    events: 'Event'
    id: 'ID'
    lastLesson: 'StudyGroupClassRecord'
    lessons: 'Lesson'
    level: 'Level'
    name: 'String'
    nextLesson: 'Lesson'
    studyGroupClassRecords: 'StudyGroupClassRecord'
    studyGroupTeachers: 'StudyGroupTeacher'
  }
  StudyGroupClassAttendee: { // field return type name
    attended: 'Boolean'
    classRecord: 'ClassRecord'
    id: 'ID'
    student: 'Enrollment'
    studentId: 'ID'
    studyGroupClassRecord: 'StudyGroupClassRecord'
  }
  StudyGroupClassRecord: { // field return type name
    completedAt: 'String'
    deletedAt: 'String'
    id: 'ID'
    lesson: 'Lesson'
    lessonEndedAt: 'String'
    lessonStartedAt: 'String'
    revertClassStatus: 'Boolean'
    startedAt: 'String'
    status: 'String'
    studyGroup: 'StudyGroup'
    studyGroupClassAttendees: 'StudyGroupClassAttendee'
    studyGroupId: 'String'
    teacherNotes: 'String'
  }
  StudyGroupTeacher: { // field return type name
    id: 'ID'
    studyGroup: 'StudyGroup'
    studyGroupClassRecord: 'StudyGroupClassRecord'
    teacher: 'User'
  }
  Subscription: { // field return type name
    customer: 'User'
    customerId: 'String'
    freeTrial: 'FreeTrial'
    id: 'ID'
    paymentProviderCheckoutId: 'String'
    paymentProviderId: 'String'
    status: 'String'
    subscriptionItems: 'SubscriptionItem'
  }
  SubscriptionItem: { // field return type name
    active: 'Boolean'
    id: 'ID'
    priceId: 'String'
    quantity: 'Float'
    subscriptionId: 'String'
  }
  TeacherDashboard: { // field return type name
    id: 'ID'
    nextEvents: 'EventOccurrence'
    students: 'Student'
  }
  User: { // field return type name
    dateOfBirth: 'String'
    displayName: 'String'
    eventsOrganised: 'Event'
    eventsOwned: 'Event'
    familyName: 'String'
    firstName: 'String'
    id: 'ID'
    invitationsReceived: 'Invitation'
    onboardingSubmitted: 'Boolean'
    primaryEmail: 'String'
    profileComplete: 'Boolean'
    userAddresses: 'UserAddress'
    userIdentificationList: 'UserIdentification'
    userPhoneNumbers: 'UserPhoneNumber'
  }
  UserAddress: { // field return type name
    addressType: 'String'
    city: 'String'
    countryISO: 'String'
    district: 'String'
    id: 'ID'
    latitude: 'Float'
    longitude: 'Float'
    postalCode: 'String'
    state: 'String'
    street: 'String'
    streetComplement: 'String'
    streetNumber: 'String'
  }
  UserIdentification: { // field return type name
    attachementUrl: 'String'
    category: 'String'
    code: 'String'
    countryISO: 'String'
    id: 'ID'
  }
  UserPhoneNumber: { // field return type name
    category: 'String'
    code: 'String'
    countryISO: 'String'
    id: 'ID'
    internationalFormat: 'String'
    nationalFormat: 'String'
    rawFormat: 'String'
  }
  UserTutorialForm: { // field return type name
    description: 'String'
    id: 'ID'
    sections: 'Section'
    slug: 'String'
    title: 'String'
  }
  ClassRecordInterface: { // field return type name
    completedAt: 'String'
    deletedAt: 'String'
    id: 'ID'
    lesson: 'Lesson'
    lessonEndedAt: 'String'
    lessonStartedAt: 'String'
    startedAt: 'String'
    status: 'String'
    teacherNotes: 'String'
  }
}

export interface NexusGenArgTypes {
  Mutation: {
    activateAndUpgradeSubscription: { // args
      activateAndUpgradeSubscriptionInput?: NexusGenInputs['ActivateAndUpgradeSubscriptionInput'] | null; // ActivateAndUpgradeSubscriptionInput
    }
    activateEnrollment: { // args
      enrollmentId?: string | null; // ID
    }
    addStudentToGroup: { // args
      enrollmentInput?: NexusGenInputs['AddStudentToGroupInput'] | null; // AddStudentToGroupInput
    }
    cancelEnrollment: { // args
      id?: string | null; // ID
    }
    changeEnrollmentSchedule: { // args
      changeScheduleInput?: NexusGenInputs['ChangeScheduleInput'] | null; // ChangeScheduleInput
    }
    changeMyPassword: { // args
      changePasswordInput?: NexusGenInputs['ChangePasswordInput'] | null; // ChangePasswordInput
    }
    changeSpecificEvent: { // args
      changeSpecificEventInput?: NexusGenInputs['EventOccurrenceInput'] | null; // EventOccurrenceInput
    }
    createEnrollment: { // args
      enrollmentInput?: NexusGenInputs['EnrollmentInput'] | null; // EnrollmentInput
      invitedStudent?: NexusGenInputs['StudentInput'] | null; // StudentInput
    }
    createPaymentMethodCheckoutMutation: { // args
      type?: string | null; // String
    }
    createProduct: { // args
      createProductInput?: NexusGenInputs['CreateProductInput'] | null; // CreateProductInput
    }
    createProductPrice: { // args
      createProductPriceInput?: NexusGenInputs['CreateProductPriceInput'] | null; // CreateProductPriceInput
    }
    createStudyGroup: { // args
      createGroupInput?: NexusGenInputs['CreateStudyGroupInput'] | null; // CreateStudyGroupInput
    }
    createSubscription: { // args
      subscriptionInput?: NexusGenInputs['CreateSubscriptionInput'] | null; // CreateSubscriptionInput
    }
    editFinishedClass: { // args
      editFinishedClassInput?: NexusGenInputs['EditFinishedClassInput'] | null; // EditFinishedClassInput
    }
    finishClass: { // args
      finishClassInput?: NexusGenInputs['FinishClassInput'] | null; // FinishClassInput
    }
    removeStudentFromGroup: { // args
      events?: NexusGenInputs['EventsInput'] | null; // EventsInput
      id?: string | null; // ID
    }
    removeStudyGroup: { // args
      removeGroupInput?: NexusGenInputs['RemoveStudyGroupInput'] | null; // RemoveStudyGroupInput
    }
    revertFinishedClassStatus: { // args
      revertFinishedClassStatusInput?: NexusGenInputs['RevertFinishedClassStatusInput'] | null; // RevertFinishedClassStatusInput
    }
    revertLessonStatus: { // args
      revertLessonStatusInput?: NexusGenInputs['RevertLessonStatusInput'] | null; // RevertLessonStatusInput
    }
    startClass: { // args
      startClassInput?: NexusGenInputs['StartClassInput'] | null; // StartClassInput
    }
    submitUserTutorialForm: { // args
      submitUserTutorialFormInput?: NexusGenInputs['SubmitUserTutorialFormInput'] | null; // SubmitUserTutorialFormInput
    }
    updateMyProfile: { // args
      userProfile?: NexusGenInputs['UserInput'] | null; // UserInput
    }
    updateProductPrice: { // args
      updateProductPriceInput?: NexusGenInputs['UpdateProductPriceInput'] | null; // UpdateProductPriceInput
    }
    updateStudyGroup: { // args
      studyGroupInput?: NexusGenInputs['UpdateStudyGroupInput'] | null; // UpdateStudyGroupInput
    }
  }
  Query: {
    classroom: { // args
      filters?: NexusGenInputs['ClassroomFiltersInput'] | null; // ClassroomFiltersInput
    }
    enrollment: { // args
      id?: string | null; // ID
    }
    findGroupById: { // args
      id?: string | null; // String
    }
    getUserTutorialForm: { // args
      slug?: string | null; // String
    }
    lesson: { // args
      id?: string | null; // ID
    }
    myCalendar: { // args
      fromDate?: string | null; // String
      toDate?: string | null; // String
    }
    product: { // args
      id?: string | null; // ID
    }
    products: { // args
      productFilters?: NexusGenInputs['ProductFilters'] | null; // ProductFilters
    }
    program: { // args
      id?: string | null; // ID
    }
    studentDashboard: { // args
      filters?: NexusGenInputs['DashboardFilters'] | null; // DashboardFilters
    }
    subscription: { // args
      id?: string | null; // ID
    }
    teacherDashboard: { // args
      filters?: NexusGenInputs['DashboardFilters'] | null; // DashboardFilters
    }
  }
}

export interface NexusGenAbstractTypeMembers {
  ActivateAndUpdateSubscriptionType: "CustomerPaymentSettings" | "Subscription"
  CheckboxObjects: "Button" | "Option"
  ClassRecord: "EnrollmentClassRecord" | "StudyGroupClassRecord"
  DialogObjects: "Button" | "Delay" | "Input"
  DialogSteps: "DialogBox"
  QuestionSteps: "Checkbox" | "DialogBox" | "Radio"
  RadioObjects: "Button" | "Option"
  Section: "Dialog" | "Question"
  ClassRecordInterface: "EnrollmentClassRecord" | "StudyGroupClassRecord"
}

export interface NexusGenTypeInterfaces {
  EnrollmentClassRecord: "ClassRecordInterface"
  StudyGroupClassRecord: "ClassRecordInterface"
}

export type NexusGenObjectNames = keyof NexusGenObjects;

export type NexusGenInputNames = keyof NexusGenInputs;

export type NexusGenEnumNames = never;

export type NexusGenInterfaceNames = keyof NexusGenInterfaces;

export type NexusGenScalarNames = keyof NexusGenScalars;

export type NexusGenUnionNames = keyof NexusGenUnions;

export type NexusGenObjectsUsingAbstractStrategyIsTypeOf = never;

export type NexusGenAbstractsUsingStrategyResolveType = "ActivateAndUpdateSubscriptionType" | "CheckboxObjects" | "ClassRecord" | "ClassRecordInterface" | "DialogObjects" | "DialogSteps" | "QuestionSteps" | "RadioObjects" | "Section";

export type NexusGenFeaturesConfig = {
  abstractTypeStrategies: {
    resolveType: true
    isTypeOf: false
    __typename: false
  }
}

export interface NexusGenTypes {
  context: EsloContext;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  inputTypeShapes: NexusGenInputs & NexusGenEnums & NexusGenScalars;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  fieldTypeNames: NexusGenFieldTypeNames;
  allTypes: NexusGenAllTypes;
  typeInterfaces: NexusGenTypeInterfaces;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractTypeMembers: NexusGenAbstractTypeMembers;
  objectsUsingAbstractStrategyIsTypeOf: NexusGenObjectsUsingAbstractStrategyIsTypeOf;
  abstractsUsingStrategyResolveType: NexusGenAbstractsUsingStrategyResolveType;
  features: NexusGenFeaturesConfig;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginInputTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginInputFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginSchemaConfig {
  }
  interface NexusGenPluginArgConfig {
  }
}